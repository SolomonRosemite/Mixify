type SyncLog {
  id: ID!
  userId: ID!
  snapshotId: ID!
}

type PlaylistSnapshotConfiguration {
  id: ID!
  playlists: [PlaylistSnapshot!]!
}

type PlaylistSnapshot {
  name: String!
  spotifyPlaylistId: String
  playlistOrder: String
  associations: [PlaylistAssociationSnapshot!]!
}

type PlaylistAssociationSnapshot {
  name: String!
  childPlaylistId: ID!
  parentPlaylistId: ID!
}

type Query {
  syncLogs: [SyncLog!]!
}

input NewSyncLog {
  snapshotId: ID!
}

input NewPlaylistSnapshotConfiguration {
  playlists: [NewPlaylistSnapshot!]!
}

input NewPlaylistSnapshot {
  name: String!
  playlistId: ID!
  spotifyPlaylistId: String
  playlistOrder: String
  associations: [NewPlaylistAssociationSnapshot!]!
}

input NewPlaylistAssociationSnapshot {
  childPlaylistId: ID!
  parentPlaylistId: ID!
}

type Mutation {
  # createSyncLog(input: NewSyncLog!): SyncLog!
  createPlaylistSnapshotConfiguration(
    input: NewPlaylistSnapshotConfiguration!
  ): PlaylistSnapshotConfiguration!
}
